@model PetColourViewModel
@using Defra.PTS.Web.Domain.DTOs;
@using Defra.PTS.Web.Domain.ViewModels.TravelDocument;
@using Defra.PTS.Web.Domain.Enums;
@using Defra.PTS.Web.Domain.ViewModels;
@using Defra.PTS.Web.Application.Extensions;
@using Defra.PTS.Web.Application.DTOs.Services;
@using Defra.PTS.Web.UI.Constants;
@using Defra.PTS.Web.UI.Extensions;
@using Microsoft.Extensions.Localization;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject IStringLocalizer<SharedResource> sharedlocalizer

@{
    var fieldsetLegend = new FieldsetLegendViewModel { Label = Localizer[Model.FormTitle].Value, LabelFor = "Black" };
    this.SetMetaTitle(Localizer[Model.FormTitle].Value);

    var colours = (IEnumerable<ColourDto>)ViewBag.Colours;
    int otherId = Int32.Parse(colours.Last().Id);
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @using (Html.BeginForm("PetColour", "TravelDocument", FormMethod.Post, new { @class = "form PetColour" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.IsCompleted)
            @Html.HiddenFor(x => x.PetSpecies)
            @Html.HiddenFor(x => x.OtherColourID)
            @Html.HiddenFor(x => x.PetColourName)
            
            <partial name="_ErrorSummary" />

            <div id="formroot" class="govuk-form-group @(ViewData.ModelState.HasError("PetColour") ? "govuk-form-group--error" : null)">
                <fieldset class="govuk-fieldset">

                    <partial name="_FieldsetLegend" model=fieldsetLegend />

                    <div class="govuk-hint">
                       @Localizer[$"Choose the main colour of your {@Model.PetTypeNameLowered}. For example, if your {@Model.PetTypeNameLowered} is mostly black with white spots, choose black."]
                    </div>

                    @Html.ValidationMessageFor(x => x.PetColour, string.Empty, new { @class="govuk-error-message"})

                    <div class="govuk-form-group" id="PetColour">
                        <div class="govuk-radios" data-module="govuk-radios">

                            @foreach (var petColour in colours)
                            {
                                if(petColour.Code != "Other")
                                {
                                    <div class="govuk-radios__item">
                                        <input class="govuk-radios__input" type="radio" id=@petColour.Code asp-for="PetColour" value="@petColour.Id" onclick="clearInput()">
                                        <label class="govuk-label govuk-radios__label" for="@petColour.Code">
                                            @petColour.Name
                                        </label>
                                    </div>
                                }
                            }

                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" type="radio" id="rBtnPetColourOther" asp-for="PetColour" value="@otherId" aria-controls="conditional-PetColourOther" aria-expanded="false">
                                <label class="govuk-label govuk-radios__label" for="rBtnPetColourOther">
                                    @sharedlocalizer["Other"]
                                </label>
                            </div>

                            <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-PetColourOther">
                                <div class="govuk-form-group @(ViewData.ModelState.HasError("PetColourOther") ? "govuk-form-group--error" : null)">
                                    <div class="govuk-form-group">
                                        <label class="govuk-label govuk-label--s" for="PetColourOther">
                                           @Localizer[$"Describe the colour of your {@Model.PetTypeNameLowered}"]
                                        </label>
                                        @Html.ValidationMessageFor(x => x.PetColourOther, string.Empty, new { @class = "govuk-error-message" })
                                        <input class="govuk-input govuk-!-width-two-thirds" id="PetColourOther" asp-for="PetColourOther" spellcheck="false">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
            <div class="govuk-button-group">
                <button class="govuk-button" data-module="govuk-button" type="submit">
                    @sharedlocalizer["Continue"]
                </button>
            </div>

        }

    </div>
</div>

@section Scripts
    {
    <script>
        $(document).ready(function () {

            //if the form has an error, but it is specific to the other box, we relocate it

            if ($("#formroot").hasClass("govuk-form-group--error") && $("#Other").is(":checked")) {
                $('#formroot').removeClass("govuk-form-group--error");
                $('#OtherColour').addClass("govuk-form-group--error");
            }

            $(".govuk-radios__input").click(function () {

                $('.govuk-error-summary').hide();
                $('.govuk-error-message').hide();
                $('#formroot').removeClass("govuk-form-group--error");
                $('#OtherColour').removeClass("govuk-form-group--error");

            });
        })

        function clearInput() {
            document.getElementById("PetColourOther").value = "";
        }
    </script>
}
