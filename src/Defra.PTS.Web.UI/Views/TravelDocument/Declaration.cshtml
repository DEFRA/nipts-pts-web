@model DeclarationViewModel
@using Defra.PTS.Web.Domain.ViewModels.TravelDocument;
@using Defra.PTS.Web.Domain.Enums;
@using Defra.PTS.Web.UI.ViewComponents;
@using Defra.PTS.Web.UI.Constants;
@using Defra.PTS.Web.UI.Extensions;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@{
    this.SetMetaTitle(DeclarationViewModel.FormTitle);
    var errorOrder = new string[] { "Postcode", "Phone", "AgreedToAccuracy", "AgreedToPrivacyPolicy", "AgreedToDeclaration" };
    var currentCulture = System.Globalization.CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @using (Html.BeginForm("Declaration", "TravelDocument", FormMethod.Post, new { @id = "DeclarationForm", @class = "form Declaration" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.IsCompleted)
            @Html.HiddenFor(x => x.RequestId)
            @Html.HiddenFor(x => x.Postcode)
            @Html.HiddenFor(x => x.Phone)
            @Html.HiddenFor(x => x.IsManualAddress)

            <partial name="_ErrorSummaryOrdered" model=errorOrder />

            <div class="govuk-form-group">

                <h1 class="govuk-heading-xl">
                    @Localizer[@DeclarationViewModel.FormTitle]
                </h1>

                @await Component.InvokeAsync(nameof(MicrochipInformationCard))
                @await Component.InvokeAsync(nameof(PetDetailsCard))
                @await Component.InvokeAsync(nameof(PetKeeperDetailsCard))

                <h2 class="govuk-heading-l">@Localizer["Declaration"]</h2>
                <h3 class="govuk-body">@Localizer["I declare that:"]</h3>
                <ul class="govuk-list govuk-list--bullet">
                    <li>@Localizer["I am the applicant"]</li>
                    <li>@Localizer["the answers I have given are true and correct to the best of my knowledge"]</li>
                    <li>@Localizer["I understand that I can travel with this pet to and from Northern Ireland only and not to an EU member state (Ireland is an EU member state)"]</li>
                    <li>@Localizer["I am not taking the animal as part of a commercial movement"]</li>
                    @if (currentCulture == "en")
                    {
                        <li>I have read and I accept the <a class="govuk-link" href="@WebAppConstants.Pages.Content.TermsAndConditions">Pet Travel Scheme terms and conditions</a></li>
                    }
                    @if (currentCulture == "cy")
                    {
                        <li>Rwyf wedi darllen telerau ac amodau'r <a class="govuk-link" href="@WebAppConstants.Pages.Content.TermsAndConditions">Cynllun Teithio Anifeiliaid Anwes</a>, ac rwy'n eu derbyn</li>
                    }
                    <li>@Localizer["I have read the "]<a class="govuk-link" target="_blank" rel="noopener noreferrer" href="@WebAppConstants.ExternalLinks.PrivacyNotice"> @Localizer["privacy notice"] <span class="govuk-!-display-none-print">@Localizer["(opens in a new tab)"]</span></a></li>
                </ul>

                <div id="formroot-declaration" class="govuk-form-group govuk-!-static-margin-bottom-9 @(ViewData.ModelState.IsValid ? "" : "govuk-form-group--error")">
                    @Html.ValidationMessageFor(x => x.AgreedToDeclaration, string.Empty, new { @id = "declaration-error-message", @class = "govuk-error-message" })
                    <div class="govuk-checkboxes" data-module="govuk-checkboxes">
                        <div class="govuk-checkboxes__item">
                            @Html.CheckBoxFor(m => m.AgreedToDeclaration, new { @class = "govuk-checkboxes__input", id = "AgreedToDeclaration", aria_labelledby = "DeclarationLabel" })
                            <div id="DeclarationLabel" class="govuk-label govuk-checkboxes__label" for="AgreedToDeclaration">
                                @Localizer["I agree"]
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <div class="govuk-button-group">
                <button class="govuk-button" data-module="govuk-button" type="submit" onClick='return submitForm()' id="submitButton">
                    @Localizer["Send application"]
                </button>
            </div>
        }
    </div>
</div>

@section Scripts
{
    <script>
        let submitting = false;
        $(document).ready(function () {
            submitting = false;
            $('#submitButton').prop('disabled', false);
        })

        function submitForm() {
            if (!submitting) {
                submitting = true;
                $('#submitButton').prop('disabled', true);
                $('#DeclarationForm').submit();
                return true;
            }

            return false;
        }
    </script>
}